# Generated by Django 3.2 on 2025-05-22 15:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='权限名称')),
                ('code', models.CharField(max_length=64, verbose_name='权限代码')),
            ],
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='分组名称')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=32, verbose_name='编号')),
                ('expiry_time', models.DateTimeField(verbose_name='到期时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user_quantity', models.IntegerField(default=10, verbose_name='用户数量')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
                ('enable_auto_stock_in', models.BooleanField(default=False, verbose_name='启用自动入库')),
                ('enable_auto_stock_out', models.BooleanField(default=False, verbose_name='启用自动出库')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
                ('permissions', models.ManyToManyField(blank=True, related_name='roles', to='system.Permission', verbose_name='权限')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='system.team')),
            ],
            options={
                'unique_together': {('name', 'team')},
            },
        ),
        migrations.AddField(
            model_name='permission',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='system.permissiongroup', verbose_name='权限分组'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=256, verbose_name='密码')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
                ('phone', models.CharField(blank=True, max_length=32, null=True, verbose_name='手机号')),
                ('email', models.CharField(blank=True, max_length=256, null=True, verbose_name='邮箱')),
                ('sex', models.CharField(choices=[('man', '男'), ('woman', '女')], max_length=32, verbose_name='性别')),
                ('permissions', models.JSONField(default=list, verbose_name='权限')),
                ('is_manager', models.BooleanField(default=False, verbose_name='管理员状态')),
                ('is_active', models.BooleanField(default=True, verbose_name='激活状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('roles', models.ManyToManyField(blank=True, related_name='users', to='system.Role', verbose_name='角色')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='system.team')),
            ],
            options={
                'unique_together': {('username', 'team'), ('name', 'team')},
            },
        ),
    ]
